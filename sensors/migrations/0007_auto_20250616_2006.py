# Generated by Django 4.2.7 on 2025-06-16 20:06

from django.db import migrations


def create_hosted_clusters_for_existing_users(apps, schema_editor):
    """Create hosted cluster entries for users who have MQTT credentials"""
    User = apps.get_model('auth', 'User')
    UserProfile = apps.get_model('user', 'UserProfile')
    MqttCluster = apps.get_model('sensors', 'MqttCluster')
    
    # Get all users with MQTT credentials
    profiles_with_mqtt = UserProfile.objects.filter(
        mqtt_username__isnull=False,
        mqtt_password_set=True
    ).exclude(mqtt_username='')
    
    for profile in profiles_with_mqtt:
        # Check if hosted cluster already exists
        existing_cluster = MqttCluster.objects.filter(
            user=profile.user,
            cluster_type='hosted'
        ).first()
        
        if not existing_cluster:
            # Create hosted cluster
            MqttCluster.objects.create(
                user=profile.user,
                name='Free #1',
                host='13.203.165.247',
                port=1883,
                username=profile.mqtt_username,
                password='[encrypted]',  # Don't store actual password
                cluster_type='hosted'
            )
            print(f"Created hosted cluster for user: {profile.user.username}")


def reverse_create_hosted_clusters(apps, schema_editor):
    """Remove hosted clusters"""
    MqttCluster = apps.get_model('sensors', 'MqttCluster')
    MqttCluster.objects.filter(cluster_type='hosted').delete()


class Migration(migrations.Migration):

    dependencies = [
        ("sensors", "0006_mqttcluster_mqttactivity_mqtttopic_and_more"),
    ]

    operations = [
        migrations.RunPython(
            create_hosted_clusters_for_existing_users,
            reverse_create_hosted_clusters
        ),
    ]
