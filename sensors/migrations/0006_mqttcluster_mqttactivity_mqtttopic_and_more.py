# Generated by Django 4.2.7 on 2025-06-16 16:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0003_dashboardtemplate_uuid"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sensors", "0005_device_organization_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="MqttCluster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for the cluster", max_length=200
                    ),
                ),
                (
                    "cluster_type",
                    models.CharField(
                        choices=[
                            ("hosted", "Hosted by EdgeSync"),
                            ("external", "External/Third-party"),
                        ],
                        default="external",
                        max_length=20,
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        help_text="MQTT broker hostname/IP", max_length=255
                    ),
                ),
                (
                    "port",
                    models.IntegerField(default=1883, help_text="MQTT broker port"),
                ),
                (
                    "use_ssl",
                    models.BooleanField(
                        default=False, help_text="Use SSL/TLS connection"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, help_text="MQTT username", max_length=100
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="MQTT password (encrypted)",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Cluster description"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether cluster is active"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "total_topics",
                    models.IntegerField(default=0, help_text="Number of active topics"),
                ),
                (
                    "total_messages",
                    models.BigIntegerField(
                        default=0, help_text="Total messages published"
                    ),
                ),
                (
                    "total_subscriptions",
                    models.IntegerField(
                        default=0, help_text="Number of active subscriptions"
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        help_text="Organization this cluster belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Cluster owner",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "mqtt_clusters",
            },
        ),
        migrations.CreateModel(
            name="MqttActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("publish", "Message Published"),
                            ("subscribe", "Topic Subscribed"),
                            ("unsubscribe", "Topic Unsubscribed"),
                            ("connect", "Client Connected"),
                            ("disconnect", "Client Disconnected"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "topic_name",
                    models.CharField(
                        blank=True, help_text="Associated topic", max_length=255
                    ),
                ),
                (
                    "client_id",
                    models.CharField(
                        blank=True, help_text="MQTT client ID", max_length=255
                    ),
                ),
                (
                    "message_size",
                    models.IntegerField(
                        blank=True, help_text="Message size in bytes", null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "cluster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="sensors.mqttcluster",
                    ),
                ),
            ],
            options={
                "db_table": "mqtt_activities",
            },
        ),
        migrations.CreateModel(
            name="MqttTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic_name",
                    models.CharField(help_text="MQTT topic name", max_length=255),
                ),
                (
                    "message_count",
                    models.BigIntegerField(
                        default=0, help_text="Total messages on this topic"
                    ),
                ),
                (
                    "last_message_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When last message was received",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "cluster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="sensors.mqttcluster",
                    ),
                ),
            ],
            options={
                "db_table": "mqtt_topics",
                "indexes": [
                    models.Index(
                        fields=["cluster", "-last_message_at"],
                        name="mqtt_topics_cluster_42257c_idx",
                    ),
                    models.Index(
                        fields=["cluster", "is_active"],
                        name="mqtt_topics_cluster_2fe3e2_idx",
                    ),
                ],
                "unique_together": {("cluster", "topic_name")},
            },
        ),
        migrations.AddIndex(
            model_name="mqttcluster",
            index=models.Index(
                fields=["user", "-created_at"], name="mqtt_cluste_user_id_b4ab27_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mqttcluster",
            index=models.Index(
                fields=["organization", "-created_at"],
                name="mqtt_cluste_organiz_08c7b4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mqttcluster",
            index=models.Index(
                fields=["cluster_type", "is_active"],
                name="mqtt_cluste_cluster_ccac77_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mqttactivity",
            index=models.Index(
                fields=["cluster", "-timestamp"], name="mqtt_activi_cluster_c3bf85_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mqttactivity",
            index=models.Index(
                fields=["activity_type", "-timestamp"],
                name="mqtt_activi_activit_31f779_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mqttactivity",
            index=models.Index(
                fields=["cluster", "topic_name", "-timestamp"],
                name="mqtt_activi_cluster_8e1125_idx",
            ),
        ),
    ]
