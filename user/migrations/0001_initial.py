# Generated by Django 5.1.5 on 2025-06-07 15:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MosquittoACL",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=100)),
                ("topic", models.TextField(help_text="MQTT topic pattern")),
                (
                    "rw",
                    models.IntegerField(
                        choices=[
                            (1, "Read"),
                            (2, "Write"),
                            (3, "Read/Write"),
                            (4, "Subscribe"),
                        ],
                        help_text="Read/Write permissions",
                    ),
                ),
            ],
            options={
                "db_table": "mosquitto_acls",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MosquittoSuperuser",
            fields=[
                (
                    "username",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("is_superuser", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "mosquitto_superusers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MosquittoUser",
            fields=[
                (
                    "username",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("password", models.TextField(help_text="PBKDF2 hashed password")),
            ],
            options={
                "db_table": "mosquitto_users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_type",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("freemium", "Freemium"),
                            ("paid", "Paid"),
                        ],
                        default="free",
                        max_length=20,
                    ),
                ),
                (
                    "mqtt_username",
                    models.CharField(
                        blank=True,
                        help_text="Generated MQTT username",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "mqtt_password_set",
                    models.BooleanField(
                        default=False, help_text="Whether user has set MQTT password"
                    ),
                ),
                (
                    "mqtt_connected",
                    models.BooleanField(
                        default=False,
                        help_text="Whether user is connected to MQTT broker",
                    ),
                ),
                (
                    "device_limit",
                    models.IntegerField(
                        default=5, help_text="Maximum number of devices allowed"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_profiles",
            },
        ),
        migrations.CreateModel(
            name="DeviceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(help_text="Device identifier", max_length=100),
                ),
                (
                    "device_name",
                    models.CharField(
                        help_text="Device name at time of action", max_length=200
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Device Created"),
                            ("updated", "Device Updated"),
                            ("deleted", "Device Deleted"),
                            ("connected", "Device Connected"),
                            ("disconnected", "Device Disconnected"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True, help_text="Additional action details", null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="device_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "device_history",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "-timestamp"],
                        name="device_hist_user_id_002b0d_idx",
                    ),
                    models.Index(
                        fields=["device_id", "-timestamp"],
                        name="device_hist_device__72079e_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserACL",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic_pattern",
                    models.TextField(
                        help_text="MQTT topic pattern (e.g., iot/tenant_001/+/+)"
                    ),
                ),
                (
                    "access_type",
                    models.IntegerField(
                        choices=[
                            (1, "Read"),
                            (2, "Write"),
                            (3, "Read/Write"),
                            (4, "Subscribe"),
                        ]
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_acls",
                "unique_together": {("user", "topic_pattern", "access_type")},
            },
        ),
    ]
